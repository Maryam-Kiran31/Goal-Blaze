
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase
<header class="top-row navbar navbar-dark">
    <div class="container-fluid d-flex align-items-center justify-content-between">
        <!-- Navbar Brand -->
        <a class="navbar-brand" href="">Goal-Blaze</a>

        <!-- Navbar Links -->
        <nav class="nav-scrollable d-flex align-items-center flex-wrap">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="bi bi-plus-square-fill"></span> Counter
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="weather">
                    <span class="bi bi-list-nested"></span> Weather
                </NavLink>
            </div>
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Manage">
                            <span class="bi bi-person-fill"></span> @context.User.Identity?.Name
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="nav-link btn btn-link text-white">
                                Logout
                            </button>
                        </form>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Register">
                            <span class="bi bi-person"></span> Register
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Account/Login">
                            <span class="bi bi-person-badge"></span> Login
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </nav>
    </div>
</header>

<div class="container-fluid">
    <div class="row">
        <div class="col">
            @Body
        </div>
    </div>
</div>

@code {
    private bool ShouldHideSidebar => PagesToHideSidebar.Contains(CurrentPath, StringComparer.OrdinalIgnoreCase);
    private string CurrentPath => NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    private string currentUrl => NavigationManager.Uri;

    private readonly List<string> PagesToHideSidebar = new() { "starter" };

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}


